{"version":3,"sources":["components/StyledComponents/StyledComponents.jsx","api/api.js","api/authApi.js","api/boardsApi.js","redux/actions/boards.js","redux/actions/auth.js","components/Registration/Registration.jsx","components/Login/Login.jsx","components/NavBar/NavBar.jsx","components/HomePage/HomePage.jsx","components/Boards/Task/Task.jsx","components/Boards/Column/Column.jsx","components/Boards/Boards.jsx","components/Boards/onDragEnd.js","components/Modal/Modal.jsx","components/BoardsList/BoardList.jsx","App.jsx","redux/reducers/boardsReducer.js","redux/reducers/authReducer.js","redux/reducers/index.js","redux/index.js","index.jsx"],"names":["Row","styled","div","mt","ml","mr","mb","Col","Input","input","Button","button","width","color","bg","H2","h2","pointer","instance","axios","create","baseURL","headers","localStorage","getItem","authApi","get","username","password","post","login","email","boardsApi","userId","board","boardId","delete","col","colId","boardsActionsConstants","addBoardToStore","type","payload","deleteBoardFromStore","authActionsConstants","authToggle","isAuth","setUserId","id","Registration","useState","setLogin","setPassword","setEmail","dispatch","useDispatch","submit","role","a","res","status","console","log","data","message","Error","registrationMe","Wrap","Title","value","onChange","e","target","onClick","h1","Login","placeholder","userName","setItem","token","loginMe","NavBar","useSelector","state","auth","Navbar","Link","to","Logo","NavLink","HomePage","Task","item","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","userSelect","padding","margin","minHeight","backgroundColor","isDragging","task","Column","delCol","addTask","display","flexDirection","alignItems","droppableId","ColumnHeader","name","AddTask","DelTask","droppableProps","background","isDraggingOver","tasks","map","Board","useHistory","location","pathname","slice","boards","filter","el","columns","addTaskHandler","delColHandler","BoardContainer","onDragEnd","result","destination","source","sourceColumn","destColumn","sourceItems","destItems","splice","removed","copiedItems","AddColBtn","uuid","columnName","addCol","Modal","isModalOpen","setModalOpen","addBoard","modalRef","useRef","boardName","setBoardName","Window","BoardList","useEffect","getBoards","delBoardHandler","deleteBoard","Container","nameOfBoard","BoardsContainer","i","nav","App","history","push","AppWrap","path","exact","component","Boards","initialState","currentBoard","currentTask","rootReducer","combineReducers","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7b28b2bd.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Row = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const Col = styled.div`\r\n    display: flex;\r\n    flex-direction: column;    \r\n    justify-content: center;\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const Input = styled.input`\r\n    width: 300px;\r\n    height: 50px;\r\n    border: 1px solid grey;\r\n    padding: 10px;\r\n    outline: none;\r\n    color: grey;\r\n    font-weight: 300;\r\n    font-size: 15px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    min-width: 100px;\r\n    width: ${({width}) => width ? width + 'px' : ''};\r\n    height: 40px;\r\n    color: ${({color}) => color ? color : 'black'};\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid grey;\r\n    cursor: pointer;\r\n    background: ${({bg}) => bg ? bg : 'white' };\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    color: black;\r\n    cursor: ${({pointer}) => pointer ? 'pointer' : 'none'};\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://sabfesapp.herokuapp.com/api/',\r\n    headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n    }\r\n})\r\n","import {instance} from \"./api\";\r\n\r\nexport const authApi = {\r\n    getAuth: ()=> {\r\n        return instance.get('auth')\r\n    },\r\n    login: (username, password) => {\r\n        return instance.post(`auth/signin`, {username, password})\r\n    },\r\n    registration: (login, password, email) => {\r\n        return instance.post(`auth/signup`, {login, password, email})\r\n    }\r\n};\r\n","import {instance} from \"./api\";\r\n\r\nexport const boardsApi = {\r\n    getBoards: (userId) => {\r\n        return instance.get(`board/${userId}`)\r\n    },\r\n    addBoard: (userId, board) => {\r\n        return instance.post(`board/${userId}`, board)\r\n    },\r\n    delBoard: (boardId) => {\r\n        return instance.delete(`board/${boardId}`)\r\n    },\r\n    addCol: (boardId, col) => {\r\n        return instance.post(`board/col/${boardId}`, col)\r\n    },\r\n    delCol: (colId) => {\r\n        return instance.delete(`board/col/${colId}`)\r\n    },\r\n    addTask: () => {\r\n\r\n    }\r\n};\r\n","import {boardsApi} from \"../../api/boardsApi\";\r\nimport {useSelector} from \"react-redux\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const boardsActionsConstants = {\r\n    SET_BOARDS: 'SET_BOARDS',\r\n    ADD_BOARD_TO_STORE: 'ADD_BOARD_TO_STORE',\r\n    DELETE_BOARD_FROM_STORE: 'DELETE_BOARD_FROM_STORE',\r\n    ADD_COL_TO_STORE: 'ADD_COL_TO_STORE',\r\n    DEL_COL_FROM_STORE: 'DEL_COL_FROM_STORE',\r\n}\r\n\r\n//ACTIONS\r\nexport const setBoards = (data) => {\r\n    return {\r\n        type: boardsActionsConstants.SET_BOARDS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const addColToStore = (data) => {\r\n    return {\r\n        type: boardsActionsConstants.ADD_COL_TO_STORE,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const delColFromStore = (data) => {\r\n    return {\r\n        type: boardsActionsConstants.DEL_COL_FROM_STORE,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const addBoardToStore = (board) => {\r\n    return {\r\n        type: boardsActionsConstants.ADD_BOARD_TO_STORE,\r\n        payload: board\r\n    }\r\n}\r\n\r\nexport const deleteBoardFromStore = (boardId) => {\r\n    return {\r\n        type: boardsActionsConstants.DELETE_BOARD_FROM_STORE,\r\n        payload: boardId\r\n    }\r\n}\r\n\r\n//THUNK\r\nexport const delCol = (boardId, colId) => async (dispatch) => {\r\n    const res = await boardsApi.delCol(colId)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(delColFromStore({boardId, colId}))\r\n    }\r\n}\r\n\r\nexport const addCol = (boardId, col) => async (dispatch) => {\r\n    const res = await boardsApi.addCol(boardId, col)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(addColToStore({boardId, col}))\r\n    }\r\n}\r\n\r\nexport const getBoards = (userId) => async (dispatch) => {\r\n    const res = await boardsApi.getBoards(userId)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(setBoards(res.data))\r\n    }\r\n}\r\n\r\nexport const addBoard = (userId, nameOfBoard) => async (dispatch) => {\r\n    const board = {\r\n        id: uuid(),\r\n        boardName: nameOfBoard,\r\n        columns: []\r\n    }\r\n\r\n    const res = await boardsApi.addBoard(userId, board)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(addBoardToStore(board))\r\n    }\r\n}\r\n\r\nexport const deleteBoard = (boardId) => async (dispatch) => {\r\n    const res = await boardsApi.delBoard(boardId)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(deleteBoardFromStore(boardId))\r\n    }\r\n}\r\n","import {authApi} from \"../../api/authApi\";\r\nimport {getBoards} from \"./boards\";\r\n\r\n//ACTIONS\r\nexport const authActionsConstants = {\r\n    IS_AUTH_TOGGLE: 'IS_AUTH_TOGGLE',\r\n    SET_USER_ID: 'SET_USER_ID',\r\n}\r\n\r\nexport const authToggle = (isAuth) => {\r\n    return {\r\n        type: authActionsConstants.IS_AUTH_TOGGLE,\r\n        payload: isAuth,\r\n    }\r\n}\r\n\r\nexport const setUserId = (id) => {\r\n    return {\r\n        type: authActionsConstants.SET_USER_ID,\r\n        payload: id\r\n    }\r\n}\r\n\r\n//THUNK\r\nexport const authMe = () => async (dispatch) => {\r\n    const res = await authApi.getAuth()\r\n\r\n    if (res.status === 200) {\r\n        dispatch(authToggle(true))\r\n        dispatch(setUserId(res.data.message))\r\n    }\r\n}\r\n\r\nexport const loginMe = (userName, password) => async (dispatch) => {\r\n    const res = await authApi.login(userName, password)\r\n\r\n    if (res.status === 200) {\r\n        localStorage.setItem('token', res.data.token)\r\n        dispatch(authToggle(true))\r\n        dispatch(setUserId(res.data.id))\r\n    }\r\n}\r\n\r\nexport const registrationMe = (login, password, email, role) => async (dispatch) => {\r\n    const res = await authApi.registration(login, password, email, role)\r\n\r\n    if (res.status === 200) {\r\n        console.log(res.data.message)\r\n    } else {\r\n        throw new Error('Registration is not completed')\r\n    }\r\n}\r\n","import React, {useState} from \"react\"\r\nimport {Button, Col, Input} from \"../StyledComponents/StyledComponents\";\r\nimport styled from 'styled-components'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {registrationMe} from \"../../redux/actions/auth\";\r\n\r\nconst Registration = () => {\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = (login, password, email) => {\r\n        const role = ['user']\r\n\r\n        dispatch(registrationMe(login, password, email, role))\r\n    }\r\n\r\n    return <Wrap>\r\n        <Title>Регистрация</Title>\r\n\r\n        <Col>\r\n            <span>Логин</span>\r\n            <Input type={\"text\"} value={login} onChange={(e) => setLogin(e.target.value)}/>\r\n            <span>Пароль</span>\r\n            <Input type={\"password\"} value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <span>Емейл</span>\r\n            <Input type={\"email\"} value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            <Button bg={\"#0051cc\"} color={'white'} onClick={() => submit(login, password, email)}>Зарегистрироваться</Button>\r\n        </Col>\r\n    </Wrap>\r\n}\r\nexport default Registration\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 300;\r\n    font-size: 40px;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 60%;\r\n`\r\n","import React, {useState} from \"react\"\r\nimport {Button, Col, Input} from \"../StyledComponents/StyledComponents\";\r\nimport styled from \"styled-components\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginMe} from \"../../redux/actions/auth\";\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const loginHandler = () => {\r\n        dispatch(loginMe(login, password))\r\n    }\r\n\r\n    return <Wrap>\r\n        <Title>Логин</Title>\r\n\r\n        <Col>\r\n            <span>Логин</span>\r\n            <Input\r\n                placeholder={\"Логин\"}\r\n                value={login} onChange={(e) => setLogin(e.target.value)}\r\n            />\r\n            <span>Пароль</span>\r\n            <Input\r\n                placeholder={\"Пароль\"}\r\n                value={password} onChange={(e) => setPassword(e.target.value)}\r\n                type={\"password\"}\r\n            />\r\n\r\n            <Button bg={\"#0051cc\"} color={'white'}\r\n                    onClick={loginHandler}\r\n            >Войти</Button>\r\n        </Col>\r\n    </Wrap>\r\n}\r\nexport default Login\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 60%;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 300;\r\n    font-size: 40px;\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Row} from \"../StyledComponents/StyledComponents\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authToggle} from \"../../redux/actions/auth\";\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n    return <Navbar>\r\n        <Link to={\"/\"}><Logo>Trello</Logo></Link>\r\n\r\n        <Row mr={30}>\r\n            {\r\n                isAuth\r\n                    ?   <>\r\n                        <Link to={\"/boardsList\"}>Board List</Link>\r\n                        <Link to={\"/\"} onClick={() => dispatch(authToggle(false))}>logout</Link>\r\n                    </>\r\n                    :   <>\r\n                        <Link to={\"/registration\"}>Регистрация</Link>\r\n                        <Link to={\"/login\"}>Логин</Link>\r\n                    </>\r\n            }\r\n        </Row>\r\n    </Navbar>\r\n}\r\nexport default NavBar\r\n\r\nconst Navbar = styled.div`\r\n    display: flex;\r\n    height: 80px;\r\n    align-items: center;   \r\n    justify-content: space-between;\r\n`\r\nconst Link = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n    margin-right: 10px;\r\n    \r\n    &:last-of-type {\r\n        margin-right: 0px;\r\n    }\r\n`\r\n\r\nconst Logo = styled.h1`\r\n    font-size: 25px;\r\n    font-weight: 300;\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst HomePage = () => {\r\n    return <Wrap>\r\n        <Title>Trello</Title>\r\n    </Wrap>\r\n}\r\nexport default HomePage\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center; \r\n    height: 70%;  \r\n`\r\nconst Title = styled.h1`\r\n    font-size: 140px;\r\n    font-weight: 300;\r\n`\r\n","import React from \"react\"\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst Task = ({item, index}) => {\r\n    return <Draggable\r\n        key={item.id}\r\n        draggableId={item.id}\r\n        index={index}\r\n    >\r\n        {(provided, snapshot) => {\r\n            return (\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={{\r\n                        userSelect: \"none\",\r\n                        padding: 16,\r\n                        margin: \"8px 0 0 0\",\r\n                        minHeight: \"50px\",\r\n                        backgroundColor: snapshot.isDragging\r\n                            ? \"#263B4A\"\r\n                            : \"#456C86\",\r\n                        color: \"white\",\r\n                        ...provided.draggableProps.style\r\n                    }}\r\n                >\r\n                    {item.task}\r\n                </div>\r\n            );\r\n        }}\r\n    </Draggable>\r\n}\r\nexport default Task\r\n","import React from \"react\"\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport Task from \"../Task/Task\";\r\nimport styled from \"styled-components\";\r\nimport {Row} from \"../../StyledComponents/StyledComponents\";\r\n\r\nconst Column = ({col,delCol, addTask}) => {\r\n    return  <div\r\n        style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\"\r\n        }}\r\n        key={col.id}\r\n    >\r\n        <div style={{ margin: \"0px 10px 0px 10px\" }}>\r\n            <Droppable droppableId={col.id} key={col.id}>\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <div>\r\n                            <ColumnHeader>\r\n                                <span>{col.name}</span>\r\n\r\n                                <Row>\r\n                                    <AddTask onClick={() => addTask(col.id)}>+</AddTask>\r\n                                    <DelTask onClick={() => delCol(col.id)}>x</DelTask>\r\n                                </Row>\r\n                            </ColumnHeader>\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                style={{\r\n                                    background: snapshot.isDraggingOver\r\n                                        ? \"#C0C0C0\"\r\n                                        : \"lightgrey\",\r\n                                    padding: 4,\r\n                                    width: 250,\r\n                                    minHeight: 80\r\n                                }}\r\n                            >\r\n                                {col.tasks.map((item, index) => {\r\n                                    return <Task\r\n                                        key={index}\r\n                                        item={item}\r\n                                        index={index}\r\n                                    />\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Droppable>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Column\r\n\r\nconst DelTask = styled.div`\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`\r\nconst AddTask = styled.div`\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    margin-right: 20px;\r\n`\r\n\r\nconst ColumnHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: lightgrey;\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    border-bottom: 1px solid grey;\r\n`\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport uuid from \"react-uuid\";\r\nimport {onDragEnd} from \"./onDragEnd\";\r\nimport Column from \"./Column/Column\";\r\nimport styled from \"styled-components\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {addCol, delCol, delColFromStore} from \"../../redux/actions/boards\";\r\n\r\n\r\nconst Board = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const boardId = history.location.pathname.slice(8)\r\n    const board = useSelector(state => state.boards.boards.filter(el => el.id === boardId))\r\n    const [columns, setColumns] = useState(board[0].columns)\r\n\r\n    const addTaskHandler = (colId) => {\r\n        // const newTask = {\r\n        //     id: uuid(),\r\n        //     task: 'test'\r\n        // }\r\n        // axios.post(`https://sabfesapp.herokuapp.com/api/board/task/${colId}`,\r\n        //     newTask,\r\n        //     {\r\n        //         headers: {\r\n        //             'Authorization':`Bearer ${localStorage.getItem('token')}`,\r\n        //         }\r\n        //     }).then(res => {\r\n        //     console.log(res)\r\n        //     })\r\n    }\r\n\r\n    const delColHandler = (colId) => {\r\n        dispatch(delCol(boardId,colId))\r\n    }\r\n    const addColHandler = () => {\r\n        const col = {\r\n            id: uuid(),\r\n            columnName: 'newCol',\r\n            tasks: []\r\n        }\r\n        dispatch(addCol(boardId, col))\r\n    }\r\n    return (\r\n        <BoardContainer>\r\n            <DragDropContext\r\n                onDragEnd={result => onDragEnd(result, columns)}\r\n            >\r\n                {columns.map((col, index) => {\r\n                    return <Column\r\n                        delCol={delColHandler}\r\n                        addTask={addTaskHandler}\r\n                        col={col}\r\n                        key={index}\r\n                    />\r\n                })}\r\n                <AddColBtn onClick={addColHandler}>+</AddColBtn>\r\n            </DragDropContext>\r\n        </BoardContainer>\r\n    );\r\n}\r\nexport default Board;\r\n\r\nconst AddColBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 100px;\r\n    color: black;\r\n    background: lightgrey;\r\n    cursor: pointer;\r\n`\r\n\r\nconst BoardContainer = styled.div`\r\n   marginLeft: 20px; \r\n   display: flex; \r\n   justifyContent: flex-start;\r\n   height: 80%; \r\n   overflow: scroll;\r\n   \r\n   &::-webkit-scrollbar {\r\n        width: 0px;\r\n        background: transparent;\r\n   }\r\n`\r\n","export const onDragEnd = (result, columns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    if (source.droppableId !== destination.droppableId) {\r\n        const sourceColumn = columns.filter(el => el.id === source.droppableId);\r\n        const destColumn = columns.filter(el => el.id === destination.droppableId);\r\n        const sourceItems = sourceColumn[0].tasks;\r\n        const destItems = destColumn[0].tasks;\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        destItems.splice(destination.index, 0, removed);\r\n    } else {\r\n        const column = columns.filter(el => el.id === source.droppableId);\r\n        const copiedItems = column[0].tasks;\r\n        const [removed] = copiedItems.splice(source.index, 1);\r\n        copiedItems.splice(destination.index, 0, removed);\r\n    }\r\n};\r\n","import React, {useRef, useState} from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {Button, Col, H2, Input, Row} from \"../StyledComponents/StyledComponents\";\r\n\r\nconst Modal = ({isModalOpen, setModalOpen, addBoard}) => {\r\n    const modalRef = useRef(null)\r\n    const [boardName, setBoardName] = useState('')\r\n\r\n    return <Wrap isModalOpen={isModalOpen}>\r\n        <Window ref={modalRef}>\r\n            <Col>\r\n                <Row mt={50} ml={50}>\r\n                    <H2>Создние доски</H2>\r\n                    <H2 ml={90} onClick={() => setModalOpen(false)}>Закрыть</H2>\r\n                </Row>\r\n                <Col ml={50} mt={20}>\r\n                    <H2 mt={20} mb={10}>Название доски</H2>\r\n                    <Input  value={boardName} onChange={ (e) => setBoardName(e.target.value)}/>\r\n                    <Button onClick={() => {\r\n                        addBoard(boardName)\r\n                        setBoardName('')\r\n                    }} mt={10} width={300} color={\"white\"} bg={\"#0051cc\"}>Создать доску</Button>\r\n                </Col>\r\n            </Col>\r\n\r\n        </Window>\r\n    </Wrap>\r\n}\r\n\r\nexport default Modal\r\n\r\nconst Window = styled.div`\r\n    border-radius: 20px;\r\n    display: block;\r\n    width: 400px;\r\n    height: 300px;\r\n    background: white;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    display: ${({isModalOpen}) => isModalOpen ? 'flex' : 'none'};\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0,0,0, .4);\r\n    z-index: 100;\r\n`\r\n","import React, {useEffect, useState} from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {H2} from \"../StyledComponents/StyledComponents\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport {addBoard, deleteBoard, getBoards} from \"../../redux/actions/boards\";\r\n\r\nconst BoardList = () => {\r\n    const userId = useSelector(state => state.auth.userId)\r\n    const boards = useSelector(state => state.boards.boards)\r\n    const [isModalOpen, setModalOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoards(userId))\r\n    }, [userId])\r\n\r\n    const delBoardHandler = (boardId) => {\r\n        dispatch(deleteBoard(boardId))\r\n    }\r\n\r\n    const addBoardHandler = (nameOfBoard) => {\r\n        dispatch(addBoard(userId, nameOfBoard))\r\n        setModalOpen(false)\r\n    }\r\n\r\n    return <Container>\r\n        <Modal addBoard={addBoardHandler} isModalOpen={isModalOpen} setModalOpen={setModalOpen}/>\r\n        <NavBar>\r\n            <H2 pointer>Все доски</H2>\r\n            <Link to={\"/\"}>Главная страница</Link>\r\n            <H2 pointer onClick={() => setModalOpen(true)}>Создать доску</H2>\r\n        </NavBar>\r\n        <BoardsContainer>\r\n            {\r\n                boards.map((board, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <span onClick={() => delBoardHandler(board.id)}>delete</span>\r\n                            <Link to={`/boards/${board.id}`}>\r\n                                <Board>\r\n                                    {board.boardName}\r\n                                </Board>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </BoardsContainer>\r\n    </Container>\r\n}\r\nexport default BoardList\r\n\r\n\r\nconst Board = styled.div`\r\n    padding: 10px;\r\n    width: 200px;\r\n    color: grey;\r\n    height: 120px;\r\n    background: white;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 20px;\r\n    transition: 1s;\r\n    \r\n    &:hover {\r\n        transform: scale(1.03);\r\n    }\r\n`\r\n\r\nconst BoardsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n`\r\n\r\nconst Link = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    margin: 50px auto;\r\n    display: flex;\r\n`\r\n\r\nconst NavBar = styled.nav`\r\n    padding-left: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    height: 100%;\r\n    width: 20%;\r\n`\r\n","import {Route, Switch} from \"react-router-dom\";\nimport Registration from \"./components/Registration/Registration\";\nimport Login from \"./components/Login/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport React, {useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport Boards from \"./components/Boards/Boards\";\nimport BoardList from \"./components/BoardsList/BoardList\";\nimport {authMe} from \"./redux/actions/auth\";\nimport {useHistory} from 'react-router-dom'\n\nfunction App() {\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        dispatch(authMe())\n        history.push(\"/boardsList\")\n    }, [dispatch])\n\n    return (\n        <AppWrap>\n            <NavBar />\n            <Switch>\n                {\n                    isAuth\n                        ?   <Switch>\n                            <Route path={\"/boardsList\"} exact component={BoardList} />\n                            <Route path={\"/boards/:id\"} exact component={Boards} />\n                            <Route path={\"/\"} exact component={HomePage} />\n                        </Switch>\n                        :   <Switch>\n                            <Route path={\"/registration\"} exact component={Registration}/>\n                            <Route path={\"/login\"} exact component={Login}/>\n                            <Route path={\"/\"} component={HomePage} />\n                        </Switch>\n                }\n            </Switch>\n        </AppWrap>\n    );\n}\nexport default App;\n\nconst AppWrap = styled.div`\n    height: 100vh;\n    background: linear-gradient(0deg, #fff, #E5E5E5 100%);    \n`\n","import {boardsActionsConstants} from \"../actions/boards\";\r\n\r\nconst initialState = {\r\n    boards: [],\r\n    currentBoard: [],\r\n    currentTask: [],\r\n}\r\n\r\nexport const boardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case boardsActionsConstants.SET_BOARDS:\r\n            return {\r\n                ...state,\r\n                boards: action.payload\r\n            }\r\n        case boardsActionsConstants.ADD_BOARD_TO_STORE:\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.payload]\r\n            }\r\n        case boardsActionsConstants.DELETE_BOARD_FROM_STORE:\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(el => el.id !== action.payload)\r\n            }\r\n        case boardsActionsConstants.ADD_COL_TO_STORE:\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(el => {\r\n                    if (el.id === action.payload.boardId) {\r\n                        el.columns.push(action.payload.col)\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        case boardsActionsConstants.DEL_COL_FROM_STORE: {\r\n            return {\r\n                ...state,\r\n                boards: state.boards.map(el => {\r\n                    if (el.id === action.payload.boardId) {\r\n                        el.columns.map(col => {\r\n                            if (col.id === action.payload.colId) {\r\n                                return col\r\n                            }\r\n                        })\r\n                        console.log(el)\r\n                    }\r\n                    return el\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {authActionsConstants} from \"../actions/auth\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    userId: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case authActionsConstants.SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                userId: action.payload,\r\n            }\r\n        case authActionsConstants.IS_AUTH_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {boardsReducer} from \"./boardsReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    boards: boardsReducer,\r\n    auth: authReducer,\r\n})\r\n","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}