{"version":3,"sources":["components/StyledComponents/StyledComponents.jsx","api/api.js","api/authApi.js","redux/actions/auth.js","components/Registration/Registration.jsx","components/Login/Login.jsx","components/NavBar/NavBar.jsx","components/HomePage/HomePage.jsx","api/boardsApi.js","api/curBoard.js","redux/actions/curBoard.js","components/Boards/Task/Task.jsx","components/Boards/Column/Column.jsx","components/Boards/Boards.jsx","components/Boards/onDragEnd.js","components/Modal/Modal.jsx","redux/actions/boards.js","components/BoardsList/BoardList.jsx","App.jsx","redux/reducers/boardsReducer.js","redux/reducers/authReducer.js","redux/reducers/curBoardReducer.js","redux/reducers/curTaskReducer.js","redux/reducers/index.js","redux/index.js","index.jsx"],"names":["Row","styled","div","width","mt","ml","mr","mb","Col","Input","input","Button","button","color","bg","H2","h2","pointer","instance","axios","create","baseURL","headers","localStorage","getItem","authApi","get","username","password","post","email","role","authActionsConstants","authToggle","isAuth","type","payload","setUserId","id","Registration","useState","login","setLogin","setPassword","setEmail","dispatch","useDispatch","submit","a","res","status","console","log","data","message","registrationMe","Wrap","Title","value","onChange","e","target","onClick","h1","Login","history","useHistory","placeholder","userName","setItem","token","loginMe","then","push","NavBar","useSelector","state","auth","Navbar","Link","to","Logo","NavLink","HomePage","boardsApi","userId","board","boardId","delete","curBoardApi","col","colId","columnId","task","taskId","curBoardActionsConstants","delColFromStore","addTask","delTask","Task","item","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","userSelect","padding","margin","minHeight","backgroundColor","isDragging","display","justifyContent","cursor","Column","delCol","columnName","ColumnContainer","droppableId","ColumnHeader","AddTask","DelTask","ColumnMain","droppableProps","background","isDraggingOver","tasks","map","Board","location","pathname","slice","isLoading","setIsLoading","isInputOpen","setIsInputOpen","setColumnName","useEffect","responseData","getCurrentBoard","setTimeout","curBoard","addTaskHandler","uuid","delColHandler","addColHandler","addCol","Header","boardName","className","BoardContainer","onDragEnd","result","columns","destination","source","sourceColumn","filter","el","destColumn","sourceItems","destItems","splice","removed","copiedItems","height","autoFocus","onKeyPress","key","trim","onBlur","AddColBtn","header","Modal","isModalOpen","setModalOpen","addBoard","modalRef","useRef","setBoardName","Window","boardsActionsConstants","addBoardToStore","deleteBoardFromStore","getBoards","BoardList","boards","delBoardHandler","deleteBoard","Container","nameOfBoard","BoardsContainer","i","nav","App","AppWrap","path","exact","component","Boards","initialState","taskInfo","rootReducer","combineReducers","action","newColsAfterDel","newColsAfterAdd","curTask","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6c48fe6c.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Row = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    width: ${({width}) => width ? width + 'px' : ''};\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const Col = styled.div`\r\n    display: flex;\r\n    flex-direction: column;    \r\n    justify-content: center;\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const Input = styled.input`\r\n    height: 50px;\r\n    border: 1px solid grey;\r\n    padding: 10px;\r\n    outline: none;\r\n    color: grey;\r\n    font-weight: 300;\r\n    font-size: 15px;\r\n    width: ${({width}) => width ? width + 'px' : '300px'};\r\n`\r\n\r\nexport const Button = styled.button`\r\n    min-width: 100px;\r\n    width: ${({width}) => width ? width + 'px' : ''};\r\n    height: 40px;\r\n    color: ${({color}) => color ? color : 'black'};\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid grey;\r\n    cursor: pointer;\r\n    background: ${({bg}) => bg ? bg : 'white' };\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    color: black;\r\n    cursor: ${({pointer}) => pointer ? 'pointer' : 'none'};\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n","import axios from \"axios\";\r\n\r\nexport const instance = axios.create({\r\n    baseURL: 'https://sabfesapp.herokuapp.com/api/',\r\n    headers: {\r\n        'Authorization': `Bearer ${localStorage.getItem('token')}`,\r\n    }\r\n})\r\n","import {instance} from \"./api\";\r\n\r\nexport const authApi = {\r\n    getAuth: ()=> {\r\n        return instance.get('auth')\r\n    },\r\n    login: (username, password) => {\r\n        return instance.post(`auth/signin`, {username, password})\r\n    },\r\n    registration: (username, password, email, role) => {\r\n        return instance.post(`auth/signup`, {username, password, email, role})\r\n    }\r\n};\r\n","import {authApi} from \"../../api/authApi\";\r\n\r\n//ACTIONS\r\nexport const authActionsConstants = {\r\n    IS_AUTH_TOGGLE: 'IS_AUTH_TOGGLE',\r\n    SET_USER_ID: 'SET_USER_ID',\r\n}\r\n\r\nexport const authToggle = (isAuth) => {\r\n    return {\r\n        type: authActionsConstants.IS_AUTH_TOGGLE,\r\n        payload: isAuth,\r\n    }\r\n}\r\n\r\nexport const setUserId = (id) => {\r\n    return {\r\n        type: authActionsConstants.SET_USER_ID,\r\n        payload: id\r\n    }\r\n}\r\n\r\n//THUNK\r\nexport const authMe = () => async (dispatch) => {\r\n    const res = await authApi.getAuth()\r\n\r\n    if (res.status === 200) {\r\n        dispatch(authToggle(true))\r\n        dispatch(setUserId(res.data.message))\r\n    }\r\n}\r\n\r\nexport const loginMe = (userName, password) => async (dispatch) => {\r\n    const res = await authApi.login(userName, password)\r\n\r\n    if (res.status === 200) {\r\n        localStorage.setItem('token', res.data.token)\r\n        dispatch(authToggle(true))\r\n        dispatch(setUserId(res.data.id))\r\n\r\n        return true\r\n    }\r\n}\r\n\r\nexport const registrationMe = (login, password, email, role) => async () => {\r\n    try {\r\n        const res = await authApi.registration(login, password, email, role)\r\n\r\n        if (res.status === 200) {\r\n            console.log(res.data.message)\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n","import React, {useState} from \"react\"\r\nimport {Button, Col, Input} from \"../StyledComponents/StyledComponents\";\r\nimport styled from 'styled-components'\r\nimport {useDispatch} from \"react-redux\";\r\nimport {registrationMe} from \"../../redux/actions/auth\";\r\n\r\nconst Registration = () => {\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n    const dispatch = useDispatch()\r\n\r\n    const submit = (login, password, email) => {\r\n        const role = ['user']\r\n\r\n        dispatch(registrationMe(login, password, email, role))\r\n    }\r\n\r\n    return <Wrap>\r\n        <Title>Регистрация</Title>\r\n\r\n        <Col>\r\n            <span>Логин</span>\r\n            <Input type={\"text\"} value={login} onChange={(e) => setLogin(e.target.value)}/>\r\n            <span>Пароль</span>\r\n            <Input type={\"password\"} value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <span>Емейл</span>\r\n            <Input type={\"email\"} value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            <Button bg={\"#0051cc\"} color={'white'} onClick={() => submit(login, password, email)}>Зарегистрироваться</Button>\r\n        </Col>\r\n    </Wrap>\r\n}\r\nexport default Registration\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 300;\r\n    font-size: 40px;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 60%;\r\n`\r\n","import React, {useState} from \"react\"\r\nimport {Button, Col, Input} from \"../StyledComponents/StyledComponents\";\r\nimport styled from \"styled-components\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {loginMe} from \"../../redux/actions/auth\";\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst Login = () => {\r\n    const history = useHistory()\r\n    const dispatch = useDispatch()\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const loginHandler = () => {\r\n        dispatch(loginMe(login, password))\r\n            .then( res => {\r\n                if (res) {\r\n                    history.push('/boardsList')\r\n                }\r\n            })\r\n    }\r\n\r\n    return <Wrap>\r\n        <Title>Логин</Title>\r\n\r\n        <Col>\r\n            <span>Логин</span>\r\n            <Input\r\n                placeholder={\"Логин\"}\r\n                value={login} onChange={(e) => setLogin(e.target.value)}\r\n            />\r\n            <span>Пароль</span>\r\n            <Input\r\n                placeholder={\"Пароль\"}\r\n                value={password} onChange={(e) => setPassword(e.target.value)}\r\n                type={\"password\"}\r\n            />\r\n\r\n            <Button bg={\"#0051cc\"} color={'white'}\r\n                    onClick={loginHandler}\r\n            >Войти</Button>\r\n        </Col>\r\n    </Wrap>\r\n}\r\nexport default Login\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 60%;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 300;\r\n    font-size: 40px;\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Row} from \"../StyledComponents/StyledComponents\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authToggle} from \"../../redux/actions/auth\";\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(state => state.auth.isAuth)\r\n\r\n    return <Navbar>\r\n        <Link to={\"/\"}><Logo>Trello</Logo></Link>\r\n\r\n        <Row mr={30}>\r\n            {\r\n                isAuth\r\n                    ?   <Link to={\"/\"} onClick={() => dispatch(authToggle(false))}>logout</Link>\r\n                    :   <>\r\n                        <Link to={\"/registration\"}>Регистрация</Link>\r\n                        <Link to={\"/login\"}>Логин</Link>\r\n                    </>\r\n            }\r\n        </Row>\r\n    </Navbar>\r\n}\r\nexport default NavBar\r\n\r\nconst Navbar = styled.div`\r\n    display: flex;\r\n    height: 5vh;\r\n    align-items: center;   \r\n    justify-content: space-between;\r\n`\r\nconst Link = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n    margin-right: 10px;\r\n    \r\n    &:last-of-type {\r\n        margin-right: 0px;\r\n    }\r\n`\r\n\r\nconst Logo = styled.h1`\r\n    font-size: 25px;\r\n    font-weight: 300;\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst HomePage = () => {\r\n    return <Wrap>\r\n        <Title>Trello</Title>\r\n    </Wrap>\r\n}\r\nexport default HomePage\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center; \r\n    height: 70%;  \r\n`\r\nconst Title = styled.h1`\r\n    font-size: 140px;\r\n    font-weight: 300;\r\n`\r\n","import {instance} from \"./api\";\r\n\r\nexport const boardsApi = {\r\n    getBoards: (userId) => {\r\n        return instance.get(`board/${userId}`)\r\n    },\r\n    addBoard: (userId, board) => {\r\n        return instance.post(`board/${userId}`, board)\r\n    },\r\n    delBoard: (boardId) => {\r\n        return instance.delete(`board/${boardId}`)\r\n    },\r\n};\r\n","import {instance} from \"./api\";\r\n\r\nexport const curBoardApi = {\r\n    getCurBoard: (boardId) => {\r\n        return instance.get(`board/getone/${boardId}`)\r\n    },\r\n    addCol: (boardId, col) => {\r\n        return instance.post(`board/col/${boardId}`, col)\r\n    },\r\n    delCol: (colId) => {\r\n        return instance.delete(`board/col/${colId}`)\r\n    },\r\n    addTask: (columnId, task) => {\r\n        return instance.post(`/board/task/${columnId}`, task)\r\n    },\r\n    delTask: (taskId) => {\r\n        return instance.delete(`board/task/${taskId}`)\r\n    }\r\n};\r\n","import {boardsApi} from \"../../api/boardsApi\";\r\nimport {curBoardApi} from \"../../api/curBoard\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const curBoardActionsConstants = {\r\n    ADD_COL: 'ADD_COL',\r\n    DEL_COL: 'DEL_COL',\r\n    SET_CUR_BOARD: 'SET_CUR_BOARD',\r\n    ADD_TASK: 'ADD_TASK',\r\n    DELL_TASK: 'DELL_TASK',\r\n}\r\n\r\n//ACTION\r\nexport const addColToStore = (data) => {\r\n    return {\r\n        type: curBoardActionsConstants.ADD_COL,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const delColFromStore = (colId) => {\r\n    return {\r\n        type: curBoardActionsConstants.DEL_COL,\r\n        payload: colId\r\n    }\r\n}\r\n\r\nexport const setCurBoard = (responseData) => {\r\n    return {\r\n        type: curBoardActionsConstants.SET_CUR_BOARD,\r\n        payload: responseData\r\n    }\r\n}\r\n\r\nexport const addTask = (columnId, task) => {\r\n    return {\r\n        type: curBoardActionsConstants.ADD_TASK,\r\n        payload: {columnId, task}\r\n    }\r\n}\r\n\r\nexport const delTask = (columnId, taskId) => {\r\n    return {\r\n        type: curBoardActionsConstants.DELL_TASK,\r\n        payload: {columnId, taskId}\r\n    }\r\n}\r\n\r\n//THUNK\r\nexport const dellTaskFromColumns = (columnId, taskId) => async (dispatch) => {\r\n    try {\r\n        const res = await curBoardApi.delTask(taskId)\r\n\r\n        if (res.status === 200) {\r\n            dispatch(delTask(columnId, taskId))\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addTaskToColumns = (columnId) => async (dispatch) => {\r\n    try {\r\n        const task = {task: \"test\", id: uuid()}\r\n        const res = await curBoardApi.addTask(columnId, task)\r\n\r\n        if (res.status === 200) {\r\n            dispatch(addTask(columnId, task))\r\n        }\r\n    }catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const getCurrentBoard = (boardId) => async (dispatch) => {\r\n    try {\r\n        const res = await curBoardApi.getCurBoard(boardId)\r\n        console.log(res)\r\n        if (res.status === 200) {\r\n            dispatch(setCurBoard(res.data))\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const delCol = (boardId, colId) => async (dispatch) => {\r\n    const res = await curBoardApi.delCol(colId)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(delColFromStore(colId))\r\n    }\r\n}\r\n\r\nexport const addCol = (boardId, col) => async (dispatch) => {\r\n    const res = await curBoardApi.addCol(boardId, col)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(addColToStore({boardId, col}))\r\n    }\r\n}\r\n","import React from \"react\"\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\nimport {Row} from \"../../StyledComponents/StyledComponents\";\r\nimport {dellTaskFromColumns} from \"../../../redux/actions/curBoard\";\r\nimport {useDispatch} from \"react-redux\";\r\n\r\nconst Task = ({item, index,colId}) => {\r\n    const dispatch = useDispatch()\r\n\r\n    return <Draggable\r\n        key={item.id}\r\n        draggableId={item.id}\r\n        index={index}\r\n    >\r\n        {(provided, snapshot) => {\r\n            return (\r\n                <Row>\r\n                    <div\r\n                        ref={provided.innerRef}\r\n                        {...provided.draggableProps}\r\n                        {...provided.dragHandleProps}\r\n                        style={{\r\n                            width: '100%',\r\n                            userSelect: \"none\",\r\n                            padding: 16,\r\n                            margin: \"8px 0 0 0\",\r\n                            minHeight: \"50px\",\r\n                            backgroundColor: snapshot.isDragging\r\n                                ? \"#263B4A\"\r\n                                : \"#456C86\",\r\n                            color: \"white\",\r\n                            ...provided.draggableProps.style\r\n                        }}\r\n                    >\r\n                        <div style={{display: 'flex', justifyContent: 'space-between'}}>\r\n                            {item.task}\r\n                            <span\r\n                                onClick={(e) => {\r\n                                    dispatch(dellTaskFromColumns(colId, item.id))\r\n                                }}\r\n                                style={{cursor: \"pointer\"}}\r\n                            >\r\n                            X\r\n                        </span>\r\n                        </div>\r\n                    </div>\r\n                </Row>\r\n            );\r\n        }}\r\n    </Draggable>\r\n}\r\nexport default Task\r\n","import React from \"react\"\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport Task from \"../Task/Task\";\r\nimport styled from \"styled-components\";\r\nimport {Row} from \"../../StyledComponents/StyledComponents\";\r\n\r\nconst Column = ({col,delCol, addTask,columnName}) => {\r\n    return  <ColumnContainer\r\n        key={col.id}\r\n    >\r\n        <div style={{ margin: \"0px 10px 0px 10px\" }}>\r\n            <Droppable droppableId={col.id} key={col.id}>\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <div>\r\n                            <ColumnHeader>\r\n                                <span>{columnName}</span>\r\n\r\n                                <Row>\r\n                                    <AddTask onClick={() => addTask(col.id)}>+</AddTask>\r\n                                    <DelTask onClick={() => delCol(col.id)}>x</DelTask>\r\n                                </Row>\r\n                            </ColumnHeader>\r\n                            <ColumnMain\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                style={{\r\n                                    background: snapshot.isDraggingOver\r\n                                        ? \"#091E420A\"\r\n                                        : \"#ebecf0\",\r\n                                    padding: 4,\r\n                                    width: 250,\r\n                                    minHeight: 80,\r\n                                }}\r\n                            >\r\n                                {col.tasks.map((item, index) => {\r\n                                    return <Task\r\n                                        key={index}\r\n                                        item={item}\r\n                                        index={index}\r\n                                        colId={col.id}\r\n                                    />\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </ColumnMain>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Droppable>\r\n        </div>\r\n    </ColumnContainer>\r\n}\r\nexport default Column\r\n\r\nconst ColumnMain = styled.div`\r\n    overflow-y: scroll;\r\n    height: 80vh;\r\n    \r\n    ::-webkit-scrollbar {\r\n        width: 8px; \r\n    }\r\n    \r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: grey;\r\n        border-radius: 10px;\r\n    }\r\n`\r\n\r\nconst ColumnContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    margin-left: 10px;\r\n    height: 95%;\r\n`\r\n\r\nconst DelTask = styled.div`\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`\r\nconst AddTask = styled.div`\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    margin-right: 20px;\r\n`\r\n\r\nconst ColumnHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: #ebecf0;\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    height: 50px;\r\n`\r\n","import React, {useEffect, useState} from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport uuid from \"react-uuid\";\r\nimport {onDragEnd} from \"./onDragEnd\";\r\nimport Column from \"./Column/Column\";\r\nimport styled from \"styled-components\";\r\nimport {NavLink, useHistory} from 'react-router-dom'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {addCol, addTaskToColumns, delCol, getCurrentBoard} from \"../../redux/actions/curBoard\";\r\nimport {H2, Input} from \"../StyledComponents/StyledComponents\";\r\n\r\n\r\nconst Board = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const boardId = history.location.pathname.slice(8)\r\n    const [isLoading, setIsLoading] = useState(true)\r\n    const [isInputOpen, setIsInputOpen] = useState(false)\r\n    const [columnName, setColumnName] = useState('')\r\n\r\n    useEffect(() => {\r\n        dispatch(getCurrentBoard(boardId))\r\n        setTimeout(() => {\r\n            setIsLoading(false)\r\n        },1000)\r\n    }, [])\r\n    const board = useSelector(state => state.curBoard)\r\n\r\n    const addTaskHandler = (colId) => {\r\n        dispatch(addTaskToColumns(colId))\r\n    }\r\n\r\n    const delColHandler = (colId) => {\r\n        dispatch(delCol(boardId,colId))\r\n    }\r\n    const addColHandler = (columnName) => {\r\n        const col = {\r\n            id: uuid(),\r\n            columnName: columnName,\r\n            tasks: []\r\n        }\r\n        dispatch(addCol(boardId, col))\r\n    }\r\n    return (\r\n        <>\r\n            <Header>\r\n                <H2 pointer ml={30} mr={15}>{board.boardName}</H2>\r\n                <H2><NavLink className=\"link\" to={\"/boardsList\"}>Список досок</NavLink></H2>\r\n                <H2 pointer ml={15}>Добавить в избраное</H2>\r\n                <H2 pointer ml={915}>Настройки</H2>\r\n            </Header>\r\n            {\r\n                isLoading\r\n                    ? <div>...loading</div>\r\n                    : <BoardContainer>\r\n                        <DragDropContext\r\n                            onDragEnd={result => onDragEnd(result, board.columns)}\r\n                        >\r\n                            {board.columns.map((col, index) => {\r\n                                return <Column\r\n                                    columnName={col.columnName}\r\n                                    delCol={delColHandler}\r\n                                    addTask={addTaskHandler}\r\n                                    col={col}\r\n                                    key={index}\r\n                                />\r\n                            })}\r\n                            {\r\n                                isInputOpen\r\n                                    ?   <div style={{height: '50px'}}>\r\n                                        <Input\r\n                                            width={100}\r\n                                            autoFocus\r\n                                            onKeyPress={(e) => {\r\n                                                if (e.key === \"Enter\") {\r\n                                                    addColHandler(columnName.trim())\r\n                                                    setColumnName('')\r\n                                                    setIsInputOpen(false)\r\n                                                }\r\n                                            }}\r\n                                            onBlur={() => {\r\n                                                if (columnName === '') {\r\n                                                    setIsInputOpen(false)\r\n                                                } else {\r\n                                                    addColHandler(columnName.trim())\r\n                                                    setColumnName('')\r\n                                                    setIsInputOpen(false)\r\n                                                }\r\n                                            }}\r\n                                            width={'100px'}\r\n                                            height={\"50px\"}\r\n                                            value={columnName}\r\n                                            onChange={(e) => setColumnName(e.target.value)}\r\n                                        />\r\n                                    </div>\r\n                                    : <AddColBtn\r\n                                        onClick={() => setIsInputOpen(true)}\r\n                                    >+</AddColBtn>\r\n\r\n                            }\r\n                        </DragDropContext>\r\n                    </BoardContainer>\r\n            }\r\n        </>\r\n    );\r\n}\r\nexport default Board;\r\n\r\nconst Header = styled.header`\r\n    height: 5vh;\r\n    display: flex;\r\n`\r\n\r\nconst AddColBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 100px;\r\n    color: black;\r\n    background: lightgrey;\r\n    cursor: pointer;\r\n`\r\n\r\nconst BoardContainer = styled.div`\r\n   display: flex; \r\n   justifyContent: flex-start;\r\n   height: 90vh;\r\n   overflow-x: scroll;\r\n   \r\n   ::-webkit-scrollbar {\r\n    height: 1px;     \r\n   }\r\n`\r\n","export const onDragEnd = (result, columns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    if (source.droppableId !== destination.droppableId) {\r\n        const sourceColumn = columns.filter(el => el.id === source.droppableId);\r\n        const destColumn = columns.filter(el => el.id === destination.droppableId);\r\n        const sourceItems = sourceColumn[0].tasks;\r\n        const destItems = destColumn[0].tasks;\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        destItems.splice(destination.index, 0, removed);\r\n    } else {\r\n        const column = columns.filter(el => el.id === source.droppableId);\r\n        const copiedItems = column[0].tasks;\r\n        const [removed] = copiedItems.splice(source.index, 1);\r\n        copiedItems.splice(destination.index, 0, removed);\r\n    }\r\n};\r\n","import React, {useRef, useState} from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {Button, Col, H2, Input, Row} from \"../StyledComponents/StyledComponents\";\r\n\r\nconst Modal = ({isModalOpen, setModalOpen, addBoard}) => {\r\n    const modalRef = useRef(null)\r\n    const [boardName, setBoardName] = useState('')\r\n\r\n    return <Wrap isModalOpen={isModalOpen}>\r\n        <Window ref={modalRef}>\r\n            <Col>\r\n                <Row mt={50} ml={50}>\r\n                    <H2>Создние доски</H2>\r\n                    <H2 ml={90} onClick={() => setModalOpen(false)}>Закрыть</H2>\r\n                </Row>\r\n                <Col ml={50} mt={20}>\r\n                    <H2 mt={20} mb={10}>Название доски</H2>\r\n                    <Input  value={boardName} onChange={ (e) => setBoardName(e.target.value)}/>\r\n                    <Button onClick={() => {\r\n                        addBoard(boardName)\r\n                        setBoardName('')\r\n                    }} mt={10} width={300} color={\"white\"} bg={\"#0051cc\"}>Создать доску</Button>\r\n                </Col>\r\n            </Col>\r\n\r\n        </Window>\r\n    </Wrap>\r\n}\r\n\r\nexport default Modal\r\n\r\nconst Window = styled.div`\r\n    border-radius: 20px;\r\n    display: block;\r\n    width: 400px;\r\n    height: 300px;\r\n    background: white;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    display: ${({isModalOpen}) => isModalOpen ? 'flex' : 'none'};\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0,0,0, .4);\r\n    z-index: 100;\r\n`\r\n","import {boardsApi} from \"../../api/boardsApi\";\r\nimport uuid from \"react-uuid\";\r\n\r\nexport const boardsActionsConstants = {\r\n    SET_BOARDS: 'SET_BOARDS',\r\n    ADD_BOARD_TO_STORE: 'ADD_BOARD_TO_STORE',\r\n    DELETE_BOARD_FROM_STORE: 'DELETE_BOARD_FROM_STORE',\r\n}\r\n\r\n//ACTIONS\r\nexport const setBoards = (data) => {\r\n    return {\r\n        type: boardsActionsConstants.SET_BOARDS,\r\n        payload: data\r\n    }\r\n}\r\n\r\nexport const addBoardToStore = (board) => {\r\n    return {\r\n        type: boardsActionsConstants.ADD_BOARD_TO_STORE,\r\n        payload: board\r\n    }\r\n}\r\n\r\nexport const deleteBoardFromStore = (boardId) => {\r\n    return {\r\n        type: boardsActionsConstants.DELETE_BOARD_FROM_STORE,\r\n        payload: boardId\r\n    }\r\n}\r\n\r\n//THUNK\r\nexport const getBoards = (userId) => async (dispatch) => {\r\n    try {\r\n        const res = await boardsApi.getBoards(userId)\r\n\r\n        if (res.status === 200) {\r\n            dispatch(setBoards(res.data))\r\n        }\r\n    } catch (e) {\r\n        console.log(e)\r\n    }\r\n}\r\n\r\nexport const addBoard = (userId, nameOfBoard) => async (dispatch) => {\r\n    const board = {\r\n        id: uuid(),\r\n        boardName: nameOfBoard,\r\n        columns: []\r\n    }\r\n\r\n    const res = await boardsApi.addBoard(userId, board)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(addBoardToStore(board))\r\n    }\r\n}\r\n\r\nexport const deleteBoard = (boardId) => async (dispatch) => {\r\n    const res = await boardsApi.delBoard(boardId)\r\n\r\n    if (res.status === 200) {\r\n        dispatch(deleteBoardFromStore(boardId))\r\n    }\r\n}\r\n","import React, {useEffect, useState} from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {H2} from \"../StyledComponents/StyledComponents\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport {addBoard, deleteBoard, getBoards} from \"../../redux/actions/boards\";\r\n\r\nconst BoardList = () => {\r\n    const userId = useSelector(state => state.auth.userId)\r\n    const boards = useSelector(state => state.boards.boards)\r\n    const [isModalOpen, setModalOpen] = useState(false)\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoards(userId))\r\n    }, [userId, dispatch])\r\n\r\n    const delBoardHandler = (boardId) => {\r\n        dispatch(deleteBoard(boardId))\r\n    }\r\n\r\n    const addBoardHandler = (nameOfBoard) => {\r\n        dispatch(addBoard(userId, nameOfBoard))\r\n        setModalOpen(false)\r\n    }\r\n\r\n    return <Container>\r\n        <Modal addBoard={addBoardHandler} isModalOpen={isModalOpen} setModalOpen={setModalOpen}/>\r\n        <NavBar>\r\n            <H2 pointer>Все доски</H2>\r\n            <Link to={\"/\"}>Главная страница</Link>\r\n            <H2 pointer onClick={() => setModalOpen(true)}>Создать доску</H2>\r\n        </NavBar>\r\n        <BoardsContainer>\r\n            {\r\n                boards.map((board, i) => {\r\n                    return (\r\n                        <div key={i}>\r\n                            <span onClick={() => delBoardHandler(board.id)}>delete</span>\r\n                            <Link to={`/boards/${board.id}`}>\r\n                                <Board>\r\n                                    {board.boardName}\r\n                                </Board>\r\n                            </Link>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </BoardsContainer>\r\n    </Container>\r\n}\r\nexport default BoardList\r\n\r\n\r\nconst Board = styled.div`\r\n    padding: 10px;\r\n    width: 200px;\r\n    color: grey;\r\n    height: 120px;\r\n    background: white;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 20px;\r\n    transition: 1s;\r\n    \r\n    &:hover {\r\n        transform: scale(1.03);\r\n    }\r\n`\r\n\r\nconst BoardsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n`\r\n\r\nconst Link = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    margin: 50px auto;\r\n    display: flex;\r\n`\r\n\r\nconst NavBar = styled.nav`\r\n    padding-left: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    height: 100%;\r\n    width: 20%;\r\n`\r\n","import {Route, Switch} from \"react-router-dom\";\nimport Registration from \"./components/Registration/Registration\";\nimport Login from \"./components/Login/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport React, {useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport Boards from \"./components/Boards/Boards\";\nimport BoardList from \"./components/BoardsList/BoardList\";\nimport {authMe} from \"./redux/actions/auth\";\nimport {useHistory} from 'react-router-dom'\nimport {getBoards} from \"./redux/actions/boards\";\n\nfunction App() {\n    const userId = useSelector(state => state.auth.userId)\n    const isAuth = useSelector(state => state.auth.isAuth)\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    useEffect(() => {\n        dispatch(authMe())\n        dispatch(getBoards(userId))\n        history.push(\"/boardsList\")\n    }, [dispatch, history, userId])\n\n    return (\n        <AppWrap>\n            <NavBar />\n            <Switch>\n                {\n                    isAuth\n                        ?   <Switch>\n                            <Route path={\"/boardsList\"} exact component={BoardList} />\n                            <Route path={\"/boards/:id\"} exact component={Boards} />\n                            <Route path={\"/\"} exact component={HomePage} />\n                        </Switch>\n                        :   <Switch>\n                            <Route path={\"/registration\"} exact component={Registration}/>\n                            <Route path={\"/login\"} exact component={Login}/>\n                            <Route path={\"/\"} component={HomePage} />\n                        </Switch>\n                }\n            </Switch>\n        </AppWrap>\n    );\n}\nexport default App;\n\nconst AppWrap = styled.div`\n    height: 100vh;\n    // background: linear-gradient(0deg, #fff, #E5E5E5 100%);    \n    background: white;\n`\n","import {boardsActionsConstants} from \"../actions/boards\";\r\n\r\nconst initialState = {\r\n    boards: [],\r\n}\r\n\r\nexport const boardsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case boardsActionsConstants.SET_BOARDS:\r\n            return {\r\n                ...state,\r\n                boards: action.payload\r\n            }\r\n        case boardsActionsConstants.ADD_BOARD_TO_STORE:\r\n            return {\r\n                ...state,\r\n                boards: [...state.boards, action.payload]\r\n            }\r\n        case boardsActionsConstants.DELETE_BOARD_FROM_STORE:\r\n            return {\r\n                ...state,\r\n                boards: state.boards.filter(el => el.id !== action.payload)\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {authActionsConstants} from \"../actions/auth\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    userId: null,\r\n}\r\n\r\nexport const authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case authActionsConstants.SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                userId: action.payload,\r\n            }\r\n        case authActionsConstants.IS_AUTH_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {curBoardActionsConstants} from \"../actions/curBoard\";\r\n\r\nconst initialState = {\r\n    columns: [],\r\n    boardName: ''\r\n}\r\n\r\nexport const curBoardReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case curBoardActionsConstants.DELL_TASK:\r\n            const newColsAfterDel = state.columns.map(el => {\r\n                if (el.id === action.payload.columnId) {\r\n                    el.tasks = el.tasks.filter(el => el.id !== action.payload.taskId)\r\n                }\r\n                return el\r\n            })\r\n            return {\r\n                ...state,\r\n                columns: newColsAfterDel\r\n            }\r\n        case curBoardActionsConstants.ADD_TASK:\r\n            const newColsAfterAdd = state.columns.map(el => {\r\n                if (el.id === action.payload.columnId) {\r\n                    el.tasks.push(action.payload.task)\r\n                }\r\n                return el\r\n            })\r\n            return {\r\n                ...state,\r\n                columns: newColsAfterAdd\r\n            }\r\n        case curBoardActionsConstants.SET_CUR_BOARD:\r\n            return {\r\n                ...state,\r\n                columns: action.payload.columns,\r\n                boardName: action.payload.boardName\r\n            }\r\n        case curBoardActionsConstants.ADD_COL:\r\n            return {\r\n                ...state,\r\n                columns: [...state.columns, action.payload.col]\r\n            }\r\n        case curBoardActionsConstants.DEL_COL: {\r\n            return {\r\n                ...state,\r\n                columns: state.columns.filter(el => el.id !== action.payload)\r\n            }\r\n        }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {curTaskActionsConstants} from \"../actions/auth\";\r\n\r\nconst initialState = {\r\n    taskInfo: []\r\n}\r\n\r\nexport const curTaskReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {boardsReducer} from \"./boardsReducer\";\r\nimport {authReducer} from \"./authReducer\";\r\nimport {curBoardReducer} from \"./curBoardReducer\";\r\nimport {curTaskReducer} from \"./curTaskReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    boards: boardsReducer,\r\n    auth: authReducer,\r\n    curBoard: curBoardReducer,\r\n    curTask: curTaskReducer,\r\n})\r\n","import {applyMiddleware, compose, createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\nimport thunk from 'redux-thunk'\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}