{"version":3,"sources":["components/StyledComponents/StyledComponents.jsx","components/Registration/Registration.jsx","redux/actions/user.js","components/Login/Login.jsx","components/NavBar/NavBar.jsx","components/HomePage/HomePage.jsx","components/Boards/Task/Task.jsx","components/Boards/Column/Column.jsx","components/Boards/Boards.jsx","components/Boards/onDragEnd.js","components/Modal/Modal.jsx","components/BoardsList/BoardList.jsx","App.jsx","redux/reducers/userReducer.js","redux/reducers/index.js","redux/index.js","index.jsx"],"names":["Row","styled","div","mt","ml","mr","mb","Col","Input","input","Button","button","width","color","bg","H2","h2","pointer","Registration","useState","login","setLogin","password","setPassword","email","setEmail","Wrap","Title","type","value","onChange","e","target","onClick","axios","post","username","role","then","res","console","log","submit","h1","userActionsConstants","authToggle","isAuth","payload","setUserId","id","Login","dispatch","useDispatch","history","useHistory","placeholder","status","localStorage","setItem","data","token","push","NavBar","useSelector","state","user","Navbar","Link","to","Logo","NavLink","HomePage","Task","item","index","draggableId","provided","snapshot","ref","innerRef","draggableProps","dragHandleProps","style","userSelect","padding","margin","minHeight","backgroundColor","isDragging","content","Column","col","delCol","addTask","display","flexDirection","alignItems","droppableId","ColumnHeader","name","AddTask","DelTask","droppableProps","background","isDraggingOver","tasks","map","Board","boardId","location","pathname","slice","board","boards","filter","el","columns","setColumns","colId","BoardContainer","onDragEnd","result","destination","source","sourceColumn","destColumn","sourceItems","destItems","splice","removed","copiedItems","AddColBtn","uuid","columnName","headers","getItem","Modal","isModalOpen","setModalOpen","addBoard","modalRef","useRef","boardName","setBoardName","Window","BoardList","userId","boardsNameList","setBoardsNameList","useEffect","get","Container","nameOfBoard","newBoard","BoardsContainer","i","nav","App","message","AppWrap","path","exact","component","Boards","initialState","rootReducer","combineReducers","action","store","createStore","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f6f167d4.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const Row = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const Col = styled.div`\r\n    display: flex;\r\n    flex-direction: column;    \r\n    justify-content: center;\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const Input = styled.input`\r\n    width: 300px;\r\n    height: 50px;\r\n    border: 1px solid grey;\r\n    padding: 10px;\r\n    outline: none;\r\n    color: grey;\r\n    font-weight: 300;\r\n    font-size: 15px;\r\n`\r\n\r\nexport const Button = styled.button`\r\n    min-width: 100px;\r\n    width: ${({width}) => width ? width + 'px' : ''};\r\n    height: 40px;\r\n    color: ${({color}) => color ? color : 'black'};\r\n    outline: none;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    border: 1px solid grey;\r\n    cursor: pointer;\r\n    background: ${({bg}) => bg ? bg : 'white' };\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n\r\nexport const H2 = styled.h2`\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    color: black;\r\n    cursor: ${({pointer}) => pointer ? 'pointer' : 'none'};\r\n    \r\n    margin-top: ${({mt}) => mt ? mt + 'px' : '0px' };\r\n    margin-left: ${({ml}) => ml ? ml + 'px' : '0px' };\r\n    margin-right: ${({mr}) => mr ? mr + 'px' : '0px' };\r\n    margin-bottom: ${({mb}) => mb ? mb + 'px' : '0px' };\r\n`\r\n","import React, {useState} from \"react\"\r\nimport {Button, Col, Input} from \"../StyledComponents/StyledComponents\";\r\nimport styled from 'styled-components'\r\nimport axios from \"axios\";\r\n\r\nconst Registration = () => {\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [email, setEmail] = useState('')\r\n\r\n    const submit = (login, password, email) => {\r\n        axios.post('https://sabfesapp.herokuapp.com/api/auth/signup', {\r\n            username: login,\r\n            email: email,\r\n            role: ['user'],\r\n            password: password,\r\n        }).then(res => console.log(res))\r\n    }\r\n\r\n    return <Wrap>\r\n        <Title>Регистрация</Title>\r\n\r\n        <Col>\r\n            <span>Логин</span>\r\n            <Input type={\"text\"} value={login} onChange={(e) => setLogin(e.target.value)}/>\r\n            <span>Пароль</span>\r\n            <Input type={\"password\"} value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n            <span>Емейл</span>\r\n            <Input type={\"email\"} value={email} onChange={(e) => setEmail(e.target.value)}/>\r\n            <Button bg={\"#0051cc\"} color={'white'} onClick={() => submit(login, password, email)}>Зарегистрироваться</Button>\r\n        </Col>\r\n    </Wrap>\r\n}\r\nexport default Registration\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 300;\r\n    font-size: 40px;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 60%;\r\n`\r\n","export const userActionsConstants = {\r\n    IS_AUTH_TOGGLE: 'IS_AUTH_TOGGLE',\r\n    SET_USER_ID: 'SET_USER_ID',\r\n    SET_BOARDS: 'SET_BOARDS',\r\n}\r\n\r\nexport const authToggle = (isAuth) => {\r\n    return {\r\n        type: userActionsConstants.IS_AUTH_TOGGLE,\r\n        payload: isAuth,\r\n    }\r\n}\r\n\r\nexport const setUserId = (id) => {\r\n    return {\r\n        type: userActionsConstants.SET_USER_ID,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const setBoards = (data) => {\r\n    return {\r\n        type: userActionsConstants.SET_BOARDS,\r\n        payload: data\r\n    }\r\n}\r\n\r\n","import React, {useState} from \"react\"\r\nimport {Button, Col, Input} from \"../StyledComponents/StyledComponents\";\r\nimport styled from \"styled-components\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {useDispatch} from \"react-redux\";\r\nimport {authToggle, setUserId} from \"../../redux/actions/user\";\r\n\r\nconst Login = () => {\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n    const [login, setLogin] = useState('')\r\n    const [password, setPassword] = useState('')\r\n\r\n    const loginHandler = () => {\r\n        axios.post('https://sabfesapp.herokuapp.com/api/auth/signin', {\r\n            username: login,\r\n            password: password,\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                localStorage.setItem('token', res.data.token)\r\n                history.push(`/boardsList`)\r\n                dispatch(authToggle(true))\r\n                dispatch(setUserId(res.data.id))\r\n            }\r\n        })\r\n    }\r\n\r\n    return <Wrap>\r\n        <Title>Логин</Title>\r\n\r\n        <Col>\r\n            <span>Логин</span>\r\n            <Input\r\n                placeholder={\"Логин\"}\r\n                value={login} onChange={(e) => setLogin(e.target.value)}\r\n            />\r\n            <span>Пароль</span>\r\n            <Input\r\n                placeholder={\"Пароль\"}\r\n                value={password} onChange={(e) => setPassword(e.target.value)}\r\n                type={\"password\"}\r\n            />\r\n\r\n            <Button bg={\"#0051cc\"} color={'white'}\r\n                    onClick={loginHandler}\r\n            >Войти</Button>\r\n        </Col>\r\n    </Wrap>\r\n}\r\nexport default Login\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    height: 60%;\r\n`\r\n\r\nconst Title = styled.h1`\r\n    font-weight: 300;\r\n    font-size: 40px;\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {Row} from \"../StyledComponents/StyledComponents\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {authToggle} from \"../../redux/actions/user\";\r\n\r\nconst NavBar = () => {\r\n    const dispatch = useDispatch()\r\n    const isAuth = useSelector(state => state.user.isAuth)\r\n\r\n    return <Navbar>\r\n        <Link to={\"/\"}><Logo>Trello</Logo></Link>\r\n\r\n        <Row mr={30}>\r\n            {\r\n                isAuth\r\n                    ?   <Link to={\"/\"} onClick={() => dispatch(authToggle(false))}>logout</Link>\r\n                    :   <>\r\n                        <Link to={\"/registration\"}>Регистрация</Link>\r\n                        <Link to={\"/login\"}>Логин</Link>\r\n                    </>\r\n            }\r\n        </Row>\r\n    </Navbar>\r\n}\r\nexport default NavBar\r\n\r\nconst Navbar = styled.div`\r\n    display: flex;\r\n    height: 80px;\r\n    align-items: center;   \r\n    justify-content: space-between;\r\n`\r\nconst Link = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n    margin-right: 10px;\r\n    \r\n    &:last-of-type {\r\n        margin-right: 0px;\r\n    }\r\n`\r\n\r\nconst Logo = styled.h1`\r\n    font-size: 25px;\r\n    font-weight: 300;\r\n    margin-left: 30px;\r\n    cursor: pointer;\r\n`\r\n","import React from \"react\"\r\nimport styled from \"styled-components\";\r\n\r\nconst HomePage = () => {\r\n    return <Wrap>\r\n        <Title>Trello</Title>\r\n    </Wrap>\r\n}\r\nexport default HomePage\r\n\r\nconst Wrap = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center; \r\n    height: 70%;  \r\n`\r\nconst Title = styled.h1`\r\n    font-size: 140px;\r\n    font-weight: 300;\r\n`\r\n","import React from \"react\"\r\nimport {Draggable} from \"react-beautiful-dnd\";\r\n\r\nconst Task = ({item, index}) => {\r\n    return <Draggable\r\n        key={item.id}\r\n        draggableId={item.id}\r\n        index={index}\r\n    >\r\n        {(provided, snapshot) => {\r\n            return (\r\n                <div\r\n                    ref={provided.innerRef}\r\n                    {...provided.draggableProps}\r\n                    {...provided.dragHandleProps}\r\n                    style={{\r\n                        userSelect: \"none\",\r\n                        padding: 16,\r\n                        margin: \"8px 0 0 0\",\r\n                        minHeight: \"50px\",\r\n                        backgroundColor: snapshot.isDragging\r\n                            ? \"#263B4A\"\r\n                            : \"#456C86\",\r\n                        color: \"white\",\r\n                        ...provided.draggableProps.style\r\n                    }}\r\n                >\r\n                    {item.content}\r\n                </div>\r\n            );\r\n        }}\r\n    </Draggable>\r\n}\r\nexport default Task\r\n","import React from \"react\"\r\nimport {Droppable} from \"react-beautiful-dnd\";\r\nimport Task from \"../Task/Task\";\r\nimport styled from \"styled-components\";\r\nimport {Row} from \"../../StyledComponents/StyledComponents\";\r\n\r\nconst Column = ({col,delCol, addTask}) => {\r\n    return  <div\r\n        style={{\r\n            display: \"flex\",\r\n            flexDirection: \"column\",\r\n            alignItems: \"center\"\r\n        }}\r\n        key={col.id}\r\n    >\r\n        <div style={{ margin: \"0px 10px 0px 10px\" }}>\r\n            <Droppable droppableId={col.id} key={col.id}>\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <div>\r\n                            <ColumnHeader>\r\n                                <span>{col.name}</span>\r\n\r\n                                <Row>\r\n                                    <AddTask onClick={() => addTask(col.id)}>+</AddTask>\r\n                                    <DelTask onClick={() => delCol(col.id)}>x</DelTask>\r\n                                </Row>\r\n                            </ColumnHeader>\r\n                            <div\r\n                                {...provided.droppableProps}\r\n                                ref={provided.innerRef}\r\n                                style={{\r\n                                    background: snapshot.isDraggingOver\r\n                                        ? \"#C0C0C0\"\r\n                                        : \"lightgrey\",\r\n                                    padding: 4,\r\n                                    width: 250,\r\n                                    minHeight: 80\r\n                                }}\r\n                            >\r\n                                {col.tasks.map((item, index) => {\r\n                                    return <Task\r\n                                        key={index}\r\n                                        item={item}\r\n                                        index={index}\r\n                                    />\r\n                                })}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Droppable>\r\n        </div>\r\n    </div>\r\n}\r\nexport default Column\r\n\r\nconst DelTask = styled.div`\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n`\r\nconst AddTask = styled.div`\r\n    cursor: pointer;\r\n    font-size: 20px;\r\n    margin-right: 20px;\r\n`\r\n\r\nconst ColumnHeader = styled.div`\r\n    display: flex;\r\n    justify-content: space-between;\r\n    background: lightgrey;\r\n    font-weight: 300;\r\n    font-size: 20px;\r\n    padding: 10px;\r\n    text-align: center;\r\n    border-bottom: 1px solid grey;\r\n`\r\n","import React, { useState } from \"react\";\r\nimport { DragDropContext } from \"react-beautiful-dnd\";\r\nimport uuid from \"react-uuid\";\r\nimport {onDragEnd} from \"./onDragEnd\";\r\nimport Column from \"./Column/Column\";\r\nimport styled from \"styled-components\";\r\nimport {useHistory} from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport {authToggle, setUserId} from \"../../redux/actions/user\";\r\n\r\n\r\nconst Board = () => {\r\n    const history = useHistory()\r\n    const boardId = history.location.pathname.slice(8)\r\n    const board = useSelector(state => state.user.boards.filter(el => el.id === boardId))\r\n\r\n    const [columns, setColumns] = useState(board[0].columns)\r\n    console.log(board)\r\n    const addTask = (colId) => {\r\n        console.log(colId)\r\n    }\r\n\r\n    const delCol = (colId) => {\r\n        setColumns(\r\n            columns.filter(col => col.id !== colId)\r\n        )\r\n    }\r\n    const addCol = () => {\r\n        axios.post(`https://sabfesapp.herokuapp.com/api/board/col/${boardId}/`,{\r\n            id: uuid(),\r\n            columnName: 'test',\r\n            tasks: []\r\n        },{\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(res => {\r\n            if (res.status === 200) {\r\n                setColumns([\r\n                    ...columns,\r\n                    {\r\n                        id: uuid(),\r\n                        name: \"Test\",\r\n                        tasks: []\r\n                    }\r\n                ])\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <BoardContainer>\r\n            <DragDropContext\r\n                onDragEnd={result => onDragEnd(result, columns)}\r\n            >\r\n                {columns.map((col, index) => {\r\n                    return <Column\r\n                        delCol={delCol}\r\n                        addTask={addTask}\r\n                        col={col}\r\n                        key={index}\r\n                    />\r\n                })}\r\n                <AddColBtn onClick={addCol}>+</AddColBtn>\r\n            </DragDropContext>\r\n        </BoardContainer>\r\n    );\r\n}\r\nexport default Board;\r\n\r\nconst AddColBtn = styled.div`\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 30px;\r\n    height: 30px;\r\n    border-radius: 100px;\r\n    color: black;\r\n    background: lightgrey;\r\n    cursor: pointer;\r\n`\r\n\r\nconst BoardContainer = styled.div`\r\n   marginLeft: 20px; \r\n   display: flex; \r\n   justifyContent: flex-start;\r\n   height: 80%; \r\n   overflow: scroll;\r\n   \r\n   &::-webkit-scrollbar {\r\n        width: 0px;\r\n        background: transparent;\r\n   }\r\n`\r\n","export const onDragEnd = (result, columns) => {\r\n    if (!result.destination) return;\r\n    const { source, destination } = result;\r\n\r\n    if (source.droppableId !== destination.droppableId) {\r\n        const sourceColumn = columns.filter(el => el.id === source.droppableId);\r\n        const destColumn = columns.filter(el => el.id === destination.droppableId);\r\n        const sourceItems = sourceColumn[0].tasks;\r\n        const destItems = destColumn[0].tasks;\r\n        const [removed] = sourceItems.splice(source.index, 1);\r\n        destItems.splice(destination.index, 0, removed);\r\n    } else {\r\n        const column = columns.filter(el => el.id === source.droppableId);\r\n        const copiedItems = column[0].tasks;\r\n        const [removed] = copiedItems.splice(source.index, 1);\r\n        copiedItems.splice(destination.index, 0, removed);\r\n    }\r\n};\r\n","import React, {useRef, useState} from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {Button, Col, H2, Input, Row} from \"../StyledComponents/StyledComponents\";\r\n\r\nconst Modal = ({isModalOpen, setModalOpen, addBoard}) => {\r\n    const modalRef = useRef(null)\r\n    const [boardName, setBoardName] = useState('')\r\n\r\n    return <Wrap isModalOpen={isModalOpen}>\r\n        <Window ref={modalRef}>\r\n            <Col>\r\n                <Row mt={50} ml={50}>\r\n                    <H2>Создние доски</H2>\r\n                    <H2 ml={90} onClick={() => setModalOpen(false)}>Закрыть</H2>\r\n                </Row>\r\n                <Col ml={50} mt={20}>\r\n                    <H2 mt={20} mb={10}>Название доски</H2>\r\n                    <Input  value={boardName} onChange={ (e) => setBoardName(e.target.value)}/>\r\n                    <Button onClick={() => {\r\n                        addBoard(boardName)\r\n                        setBoardName('')\r\n                    }} mt={10} width={300} color={\"white\"} bg={\"#0051cc\"}>Создать доску</Button>\r\n                </Col>\r\n            </Col>\r\n\r\n        </Window>\r\n    </Wrap>\r\n}\r\n\r\nexport default Modal\r\n\r\nconst Window = styled.div`\r\n    border-radius: 20px;\r\n    display: block;\r\n    width: 400px;\r\n    height: 300px;\r\n    background: white;\r\n`\r\n\r\nconst Wrap = styled.div`\r\n    display: ${({isModalOpen}) => isModalOpen ? 'flex' : 'none'};\r\n    justify-content: center;\r\n    align-items: center;\r\n    position: absolute;\r\n    left: 0;\r\n    right: 0;\r\n    top: 0;\r\n    bottom: 0;\r\n    background-color: rgba(0,0,0, .4);\r\n    z-index: 100;\r\n`\r\n","import React, {useEffect, useState} from \"react\"\r\nimport styled from \"styled-components\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {H2} from \"../StyledComponents/StyledComponents\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport {setBoards} from \"../../redux/actions/user\";\r\nimport uuid from \"react-uuid\";\r\n\r\nconst BoardList = () => {\r\n    const userId = useSelector(state => state.user.userId)\r\n    const [boardsNameList, setBoardsNameList] = useState([])\r\n    const [isModalOpen, setModalOpen] = useState(false)\r\n    const token = localStorage.getItem('token')\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://sabfesapp.herokuapp.com/api/board/${userId}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + token\r\n            }\r\n        }).then(res => {\r\n                if (res.status === 200) {\r\n                    dispatch(setBoards(res.data))\r\n                    setBoardsNameList(res.data)\r\n                }\r\n        })\r\n    }, [userId])\r\n\r\n    const addBoard = (nameOfBoard) => {\r\n        const newBoard = {\r\n            id: uuid(),\r\n            boardName: nameOfBoard,\r\n            columns: []\r\n        }\r\n        axios.post(`https://sabfesapp.herokuapp.com/api/board/${userId}`,\r\n            newBoard,\r\n            {\r\n                headers: {\r\n                    'Authorization':`Bearer ${token}`,\r\n            }\r\n        }).then(res => {\r\n                if (res.status === 200) {\r\n                    setBoardsNameList([...boardsNameList, newBoard])\r\n                }\r\n            })\r\n        setModalOpen(false)\r\n    }\r\n\r\n    return <Container>\r\n        <Modal addBoard={addBoard} isModalOpen={isModalOpen} setModalOpen={setModalOpen}/>\r\n        <NavBar>\r\n            <H2 pointer>Все доски</H2>\r\n            <Link to={\"/\"}>Главная страница</Link>\r\n            <H2 pointer onClick={() => setModalOpen(true)}>Создать доску</H2>\r\n        </NavBar>\r\n        <BoardsContainer>\r\n            {\r\n                boardsNameList.map((board, i) => {\r\n                    return (\r\n                        <Link to={`/boards/${board.id}`} key={i}>\r\n                            <Board>\r\n                                {board.boardName}\r\n                            </Board>\r\n                        </Link>\r\n                    )\r\n                })\r\n            }\r\n        </BoardsContainer>\r\n    </Container>\r\n}\r\nexport default BoardList\r\n\r\n\r\nconst Board = styled.div`\r\n    padding: 10px;\r\n    width: 200px;\r\n    color: grey;\r\n    height: 120px;\r\n    background: white;\r\n    border: 1px solid lightgrey;\r\n    border-radius: 20px;\r\n    transition: 1s;\r\n    \r\n    &:hover {\r\n        transform: scale(1.03);\r\n    }\r\n`\r\n\r\nconst BoardsContainer = styled.div`\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr 1fr 1fr 1fr;\r\n    grid-gap: 10px;\r\n`\r\n\r\nconst Link = styled(NavLink)`\r\n    text-decoration: none;\r\n    color: black;\r\n    font-size: 20px;\r\n    font-weight: 300;\r\n`\r\n\r\nconst Container = styled.div`\r\n    width: 90%;\r\n    margin: 50px auto;\r\n    display: flex;\r\n`\r\n\r\nconst NavBar = styled.nav`\r\n    padding-left: 50px;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-start;\r\n    height: 100%;\r\n    width: 20%;\r\n`\r\n","import {Route, Switch, useHistory} from \"react-router-dom\";\nimport Registration from \"./components/Registration/Registration\";\nimport Login from \"./components/Login/Login\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport NavBar from \"./components/NavBar/NavBar\";\nimport React, {useEffect} from \"react\";\nimport styled from \"styled-components\";\nimport HomePage from \"./components/HomePage/HomePage\";\nimport Boards from \"./components/Boards/Boards\";\nimport BoardList from \"./components/BoardsList/BoardList\";\nimport axios from \"axios\";\nimport {authToggle, setUserId} from \"./redux/actions/user\";\n\nfunction App() {\n    const isAuth = useSelector(state => state.user.isAuth)\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    useEffect(()=> {\n        axios.get(`https://sabfesapp.herokuapp.com/api/auth`, {\n            headers: {\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\n            }\n        }).then(res => {\n                if (res.status === 200) {\n                    dispatch(authToggle(true))\n                    dispatch(setUserId(res.data.message))\n                    history.push(`/boardsList`)\n                }\n            })\n    }, [dispatch, history])\n\n    return (\n        <AppWrap>\n            <NavBar />\n            <Switch>\n                {\n                    isAuth\n                        ?   <Switch>\n                            <Route path={\"/boardsList\"} exact component={BoardList} />\n                            <Route path={\"/boards/:id\"} exact component={Boards} />\n                            <Route path={\"/\"} exact component={HomePage} />\n                        </Switch>\n                        :   <Switch>\n                            <Route path={\"/registration\"} exact component={Registration}/>\n                            <Route path={\"/login\"} exact component={Login}/>\n                            <Route path={\"/\"} component={HomePage} />\n                        </Switch>\n                }\n            </Switch>\n        </AppWrap>\n    );\n}\nexport default App;\n\nconst AppWrap = styled.div`\n    height: 100vh;\n    background: linear-gradient(0deg, #fff, #E5E5E5 100%);    \n`\n","import {userActionsConstants} from \"../actions/user\";\r\n\r\nconst initialState = {\r\n    isAuth: false,\r\n    userId: null,\r\n    boards: []\r\n}\r\n\r\nexport const userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case userActionsConstants.SET_USER_ID:\r\n            return {\r\n                ...state,\r\n                userId: action.payload,\r\n            }\r\n        case userActionsConstants.IS_AUTH_TOGGLE:\r\n            return {\r\n                ...state,\r\n                isAuth: action.payload,\r\n            }\r\n        case userActionsConstants.SET_BOARDS:\r\n            return {\r\n                ...state,\r\n                boards: action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n","import {combineReducers} from \"redux\";\r\nimport {userReducer} from \"./userReducer\";\r\n\r\nexport const rootReducer = combineReducers({\r\n    user: userReducer,\r\n})\r\n","import {createStore} from \"redux\";\r\nimport {rootReducer} from \"./reducers\";\r\n\r\nexport const store = createStore(rootReducer)\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider} from \"react-redux\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {store} from \"./redux\";\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}